{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","profileData","setProfileData","name","about","formData","setFormData","handleChange","event","target","value","prevState","className","src","logo","alt","href","rel","onSubmit","preventDefault","axios","method","url","data","then","response","res","profile_name","about_me","catch","error","console","log","status","headers","type","onChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAAe,MAA0B,iC,eCgG1BA,MA3Ff,WACE,MAAsCC,mBAAS,MAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,mBAAS,CACvCG,KAAM,GACNC,MAAO,KAFT,mBAAOC,EAAP,KAAiBC,EAAjB,KAKA,SAASC,EAAaC,GACpB,MAAwBA,EAAMC,OAAtBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACdJ,GAAY,SAAAK,GAAS,kCAChBA,GADgB,kBAElBR,EAAOO,GAFW,GAItB,CAyBD,OACE,qBAAKE,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLP,OAAO,SACPQ,IAAI,sBAJN,yBASA,uBAAMC,SAvCZ,SAAsBV,GACpBA,EAAMW,iBACNC,IAAM,CACJC,OAAQ,OACRC,IAAK,WACLC,KAAMlB,IAEPmB,MAAK,SAACC,GACL,IAAMC,EAAMD,EAASF,KACrBrB,EAAe,CACbyB,aAAcD,EAAIvB,KAClByB,SAAUF,EAAItB,OAEjB,IACAyB,OAAM,SAACC,GACFA,EAAML,WACRM,QAAQC,IAAIF,EAAML,UAClBM,QAAQC,IAAIF,EAAML,SAASQ,QAC3BF,QAAQC,IAAIF,EAAML,SAASS,SAE9B,GACF,EAkBK,UACE,8BACE,0CAEE,uBACEC,KAAK,OACLhC,KAAK,OACLO,MAAOL,EAASF,KAChBiC,SAAU7B,SAIhB,8BACE,2CAEE,uBACE4B,KAAK,OACLhC,KAAK,QACLO,MAAOL,EAASD,MAChBgC,SAAU7B,SAIhB,wBAAQ4B,KAAK,SAAb,uBAGDlC,GACC,gCACE,+CAAkBA,EAAY0B,gBAC9B,2CAAc1B,EAAY2B,mBAMrC,EClFcS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACT,GAEJ,ECJDO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,G","file":"static/js/main.a28d470c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [profileData, setProfileData] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    about: ''\r\n  });\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"/profile\",\r\n      data: formData\r\n    })\r\n    .then((response) => {\r\n      const res = response.data;\r\n      setProfileData({\r\n        profile_name: res.name,\r\n        about_me: res.about\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      if (error.response) {\r\n        console.log(error.response);\r\n        console.log(error.response.status);\r\n        console.log(error.response.headers);\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label>\r\n              Name:\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              About:\r\n              <input\r\n                type=\"text\"\r\n                name=\"about\"\r\n                value={formData.about}\r\n                onChange={handleChange}\r\n              />\r\n            </label>\r\n          </div>\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n\r\n        {profileData && (\r\n          <div>\r\n            <p>Profile name: {profileData.profile_name}</p>\r\n            <p>About me: {profileData.about_me}</p>\r\n          </div>\r\n        )}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}